@use '../core/color';
@use '../core/typography';
@use '../core/spacing';
@use '../core/mixin';

button {
  height: auto;
  padding: 0.25rem 0.5rem;
  justify-content: center;
  box-shadow: none;
  border: 1px solid transparent;
  background-color: transparent;
  border-radius: 0.325rem;
  color: color.$dark;
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  font-size: 1rem;

  .icon {
    &,
    &.is-small,
    &.is-medium,
    &.is-large {
      height: 1.5em;
      width: 1.5em;
    }
  }

  // States
  &:not(:disabled):hover,
  &:not(:disabled).is-hovered {
    background-color: color.$darker
  }

  &:not(:disabled):focus-visible,
  &:not(:disabled).is-focused {}

  &:not(:disabled):active,
  &:not(:disabled).is-active {}

  &:disabled,
  &.is-disabled,
  &[disabled],
  fieldset[disabled] & {}

  // Modifiers
  &.is-fullwidth {
    display: flex;
    width: 100%;
  }

  &.is-loading {
    box-shadow: none;
    color: transparent !important;
    pointer-events: none;
    position: relative;

    &::after {
      position: absolute !important;
      @include mixin.loader(color.$dark);
      @include mixin.center(1rem, 20px);
    }
  }

  &.is-static {
    box-shadow: none;
    pointer-events: none;
  }

  &.is-rounded {
    border-radius: 0.5rem;
  }
}

// Type
button.is-primary {
  background-color: color.$primary;
  color: color.$light;

  // State
  &:not(:disabled):hover,
  &:not(:disabled).is-hovered {
    background-color: color.$primary-lighter;
  }

  &:not(:disabled):focus-visible,
  &:not(:disabled).is-focused {}

  &:not(:disabled):active,
  &:not(:disabled).is-active {}

  &:disabled,
  &.is-disabled,
  &[disabled],
  fieldset[disabled] & {}

  &.is-loading {
    &::after {
      @include mixin.loader(color.$light);
    }
  }
}

button.is-secondary {
  background-color: transparent;
  border-color: color.$dark;
  color: color.$dark;

  // State
  &:not(:disabled):hover,
  &:not(:disabled).is-hovered {}

  &:not(:disabled):focus-visible,
  &:not(:disabled).is-focused {}

  &:not(:disabled):active,
  &:not(:disabled).is-active {}

  &:disabled,
  &.is-disabled,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    box-shadow: none;
  }
}


.buttons {
  @include mixin.block;
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: flex-start;

  // Sizes
  &.are-small {}

  &.are-medium {}

  &.are-large {}

  &.has-addons {
    gap: 0;

    .button {
      &:not(:first-child) {
        border-end-start-radius: 0;
        border-start-start-radius: 0;
      }

      &:not(:last-child) {
        border-end-end-radius: 0;
        border-start-end-radius: 0;
        margin-inline-end: -1px;
      }

      &:hover,
      &.is-hovered {
        z-index: 2;
      }

      &:focus,
      &.is-focused,
      &:active,
      &.is-active,
      &.is-selected {
        z-index: 3;

        &:hover {
          z-index: 4;
        }
      }

      &.is-expanded {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.is-centered {
    justify-content: center;
  }

  &.is-right {
    justify-content: flex-end;
  }
}
